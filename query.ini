; Arcadia

[queryAPI]

addMachine="INSERT INTO machine (id_farm, name, mark, model, note, radius_curve, width, drive_shaft, full_speed, ip_front_cam, ip_rear_cam)
            VALUES (:Id_farm, :Name, :Mark, :Model, :Note, :RadiusCurve, :MachineWidth, :DriveShaft, :FullSpeed, :IPFrontCam, :IPRearCam)";
addMachine_tool="INSERT INTO machine_tool(id_machine, id_tool, datain, datafin)
        VALUES (:Id_machine, :Id_tool, :Datain, :Datafin)";
modMachine="UPDATE machine SET name=:Name, mark=:Mark, model=:Model, note=:Note, radius_curve=:radiusCurve, width=:MachineWidth, drive_shaft=:driveShaft, full_speed=:fullSpeed, ip_front_cam=:IPFrontCam, ip_rear_cam=:IPRearCam, id_farm=:Id_farm
            WHERE id=:idMachine";
modFarm="UPDATE farm SET address=:Address, name=:name, description=:Description, zipcode=:ZipCode, municipality=:Municipality, district=:District, geom = ST_GEOMFROMTEXT(:Polygon,4326)
         WHERE id=:idFarm";
getAllMachine="SELECT m.id, m.id_farm, m.name, m.radius_curve, m.drive_shaft, m.full_speed, m.width, m.ip_front_cam, m.ip_rear_cam,
              m.mark, m.model, m.note, f.id AS id_azienda, f.description AS azienda
              FROM machine m
              INNER JOIN farm f ON m.id_farm = f.id";
getMachineFarm="SELECT m.id, m.id_farm, m.name, m.radius_curve, m.drive_shaft, m.full_speed, m.width, m.ip_front_cam, m.ip_rear_cam,
              m.mark, m.model, m.note, f.id AS id_azienda, f.description AS azienda
              FROM machine m
              INNER JOIN farm f ON m.id_farm = f.id
              WHERE m.id_farm=:ActiveFarmId";
getAllTools="SELECT
            t.id,t.name tool_name,t.description,t.radius_curve,t.drive_shaft,t.full_speed,
            t.width tool_width,t.id_tool_type,tt.name tool_type_name
            FROM tool t INNER JOIN tool_type tt ON (t.id_tool_type = tt.id)";
getAllToolsNotAssMachine="SELECT t.id,t.tool_name,t.description,t.radius_curve,t.drive_shaft,t.full_speed,t.tool_width,t.id_tool_type,tt.tool_type_name FROM tool t INNER JOIN tool_type tt ON (t.id_tool_type = tt.id) EXCEPT SELECT t.id,t.tool_name,t.description,t.radius_curve,t.drive_shaft,t.full_speed,t.tool_width,t.id_tool_type,tt.tool_type_name FROM machine_tool mt LEFT JOIN tool t ON (mt.id_tool = t.id) LEFT JOIN tool_type tt ON (t.id_tool_type = tt.id) WHERE mt.id_machine=:IdMachine";
getAllToolsAssMachine="SELECT mt.id,mt.id_tool,t.tool_name,t.description,t.radius_curve,t.drive_shaft,t.full_speed,t.tool_width,t.id_tool_type,tt.tool_type_name FROM machine_tool mt LEFT JOIN tool t ON (mt.id_tool = t.id) LEFT JOIN tool_type tt ON (t.id_tool_type = tt.id) WHERE mt.id_machine =:Id_machine";
getAllToolTypes="SELECT * from tool_type";
addTool="INSERT INTO tool (name, description, radius_curve, drive_shaft, full_speed, width, id_tool_type)
           VALUES (:Tool_name, :Description, :Radius_curve, :Drive_shaft, :Full_speed, :Tool_width, :Id_tool_type)";
modTool="UPDATE tool set description=:Description, name=:Tool_name, radius_curve=:Radius_curve, drive_shaft=:Drive_shaft, full_speed=:Full_speed, width=:Tool_width, id_tool_type=:Id_tool_type
        WHERE id=:IdTool";
getAllWork="SELECT w.id,w.description,w.id_machine,w.id_tool,w.id_track,t.tool_width,t.id_tool_type,m.name AS machine_name,t.tool_name AS tool_name,tr.name AS track_name FROM work w INNER JOIN machine m ON (w.id_machine = m.id) INNER JOIN tool t ON (w.id_tool = t.id) INNER JOIN track tr ON (w.id_track = tr.id)";
delWork="DELETE FROM work WHERE id=:idWork";
addWork="INSERT INTO work(description, id_machine, id_tool, id_track)
        VALUES (:Description, :Id_machine, :Id_tool, :Id_track)";
modWork="UPDATE work SET description=:Description, id_machine=:Id_machine, id_tool=:Id_tool, id_track=:Id_track
        WHERE id=:Id_work";
getMachine="SELECT * FROM machine WHERE id=:idMachine";
delMachine="DELETE FROM machine WHERE id=:idMachine";
addFarm="INSERT INTO farm (name, description, address, zipcode, municipality, district, geom) 
            VALUES (:Name, :Description, :Address, :ZipCode, :Municipality, :District,  ST_GEOMFROMTEXT(:Geometry,4326))";
addFarmCalibrPoint="INSERT INTO farm_calibration (id_farm, lng_orig, lat_orig, lng_dest, lat_dest) 
            VALUES (:idFarm, :lngOrig, :latOrig, :lngDest, :latDest)";             -- added
modFarmCalibrPoint = "UPDATE farm_calibration SET 
         lng_orig=:lngOrig, 
         lat_orig=:latOrig, 
         lng_dest=:lngDest, 
         lat_dest=:latDest
         WHERE id=:idCalibrationPoint";  --id del Punto di Calibrazione
delFarmCalibrPoint = "DELETE FROM farm_calibration WHERE id=:idCalibrationPoint";  --id del Punto di Calibrazione
delMachineTool="DELETE FROM machine_tool WHERE id=:IdMachineTool";
delTool="DELETE FROM tool WHERE id=:idTool";
getAllFarm="SELECT * FROM farm";
getFarm="SELECT * FROM farm WHERE id=:idFarm";
getFarmMap = "SELECT 
             ST_AsText(geom) as polygon
             FROM farm 
             WHERE id=:idFarm";   
getFarmCalibration= "SELECT
            id as id_point_calibration,
            ST_ASTEXT(ST_POINT(lng_orig, lat_orig)) pointwktorig,
            lng_dest as lng_dest,
            lat_dest as lat_dest
            FROM farm_calibration 
            WHERE id_farm=:idFarm";                      --Punti di Calibrazione Azienda + gli ID
delFarm="DELETE FROM farm WHERE id=:idFarm";
getMachineCommand= "SELECT ia.id AS id_instant_action, ia.seq, ia.exp_value, ia.id_machine, ia.status, ia.descr, ia.id_action, ia.pkg, a.descr AS action_descr
                   FROM instant_action ia
                   INNER JOIN action a ON ia.id_action = a.id
                   WHERE ia.id_machine=:idMachine
                   AND ia.status!=1
                   ORDER BY ia.seq";
delInstantAction = "DELETE FROM instant_action WHERE id=:instantActionId";
addInstantAction = "INSERT INTO instant_action (id_machine, id_action, exp_value, seq, pkg)
                   VALUES (:idMachine, :idAction, :exp_value, :seq, :pkg)";
updateSeqActionAssMachine = "UPDATE instant_action SET seq=:Id
                            WHERE id=:Id";
directCommandToMachineNextPkg = "SELECT nextval('direct_command_to_machine_pkg')";
;-------------------------------------------------------------------------------------------------------------------------------------------------------------------

addFeatures = "INSERT INTO land_plot (name, id_farm, geom) VALUES (
              :Name,
              :ActiveFarmId,
              ST_GEOMFROMTEXT(:Polygon,4326))";
getAllPlots="SELECT p.*, f.description AS azienda
            FROM land_plot p
            INNER JOIN farm f ON p.id_farm = f.id";

getPlotsFarm="SELECT p.id, p.name, p.in_point, p.out_point, ST_AsText(p.geom) AS polygon, p.id_farm, f.description AS azienda
             FROM land_plot p
             INNER JOIN farm f ON p.id_farm = f.id
             WHERE p.id_farm=:IdFarm";

getPlots="SELECT 
ST_AsGeoJSON(in_point) as inPoint, 
ST_AsGeoJSON(out_point) as outPoint,  
ST_AsText(geom) as polygon,
ST_Extent(geom) OVER (PARTITION BY name) AS bbox,
name as nome 
FROM land_plot WHERE id=:idPlots";

delPlots="DELETE FROM land_plot WHERE id=:idPlots";
modPlots="UPDATE land_plot SET  name = :name, 
                                in_point = ST_GEOMFROMTEXT(:inPoint,4326),
                                out_point = ST_GEOMFROMTEXT(:outPoint,4326), 
                                geom = ST_GEOMFROMTEXT(:polygon,4326)
                                WHERE id=:idPlots";

modPlotsNoInOut="UPDATE land_plot SET  name = :name,
         geom = ST_GEOMFROMTEXT(:polygon,4326)
         WHERE id=:idPlots";

getPlotBbox="SELECT 
ST_AsGeoJSON(in_point) as inPoint, 
ST_AsGeoJSON(out_point) as outPoint, 
name as nome, 
ST_AsText(geom) as polygon,
ST_Extent(geom) OVER (PARTITION BY name) AS bbox
FROM land_plot  WHERE id=:idPlots";    -- added


;--END-QUERY-Land_plot-------------------------------------------------------------------------------------------------------------------------------------------------

;-QUERY-Track----------------------------------------------------------------------------------------------------------------------------------------------------------
addTrack = "INSERT INTO track (id_track_mode , name, track, data_ultima_modifica, id_utente_mod, in_point, out_point) VALUES (
                 :idTrackMode,
                 :Name,
                 ST_GEOMFROMTEXT(:line,4326),
                 :dataUltimaModifica,
                 :idUtenteMod,
                 ST_GEOMFROMTEXT(:In_point,4326),
                 ST_GEOMFROMTEXT(:Out_point,4326))";
getAllTrack = "SELECT t.*, tm.name AS tipopercorso
              FROM track t
              INNER JOIN track_mode tm ON t.id_track_mode = tm.id";
getAllTrackMode ="SELECT * FROM track_mode";
delTrack="DELETE FROM track WHERE id=:idTrack";
getTrack="SELECT ST_AsGeoJSON(in_point) as inPoint, ST_AsGeoJSON(out_point) as outPoint, ST_AsText(track) as polyline, id_track_mode as idTrackMode, name as nameTrackMode FROM track WHERE id=:idTrack";
modTrack="UPDATE track SET  id_track_mode = :idTrackMode,
                            name=:name,
                            data_ultima_modifica = :dataUltimaModifica,
                            id_utente_mod = :idUtenteMod,
                            track = ST_GEOMFROMTEXT(:line,4326), 
                            in_point = ST_GEOMFROMTEXT(:inPoint,4326), 
                            out_point = ST_GEOMFROMTEXT(:outPoint,4326)
                            WHERE id = :idTrack";
;--END-QUERY-Track-----------------------------------------------------------------------------------------------------------------------------------------------------------------------

;QUERY-action-COMANDI-MACCHINA---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
getAllCommand = "SELECT * FROM action";
addCommand = "INSERT INTO action (value, descr, unit) VALUES (:commandValue, :commandDesc , :commandUnit)";
delCommand= "DELETE FROM action WHERE id=:idCommand";
modCommand="UPDATE action SET value=:commandValue,descr=:commandDesc,unit=:commandUnit WHERE id=:idCommand";
;END--QUERY_ACTION-COMANDI-MACCHINA---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

